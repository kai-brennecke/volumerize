name: Docker Build

on:
  workflow_call:
    inputs:
      strategies:
        required: true
        type: string
      base-image:
        required: false
        type: string
        default: ''
      version:
        required: true
        type: string
    outputs:
      image:
        value: ${{ jobs.build.outputs.image }}

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.docker-config.outputs.primaryTag }}
    steps:
      - name: Get User Permissions
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}

      - name: Check User Permissions
        if: ${{ github.actor != 'dependabot[bot]' && steps.checkAccess.outputs.require-result == 'false' }}
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1

      - name: Checkout repository
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Checkout repository
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v4.2.2

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.7.0
        env:
          VERSION: ",value=${{ inputs.version }}"
          LATEST: ${{ inputs.version != '' && 'true' || 'auto' }}
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          sep-tags: ','
          flavor: | 
            latest=${{ inputs.strategies == 'default' && env.LATEST || 'false' }}
          tags: |
            type=semver,pattern={{version}}${{ env.VERSION != ',' && env.VERSION || '' }}
            type=ref,event=pr

      - name: Generate docker config
        id: docker-config
        uses: ./.github/actions/generate-docker-config
        with:
          docker-tags: ${{ steps.meta.outputs.tags }}
          prepost-strategies: ${{ inputs.strategies }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and Push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.18.0
        with:
          context: ${{ steps.docker-config.outputs.context }}
          build-args: BASE_IMAGE=${{ inputs.base-image }}
          push: true
          tags: ${{ steps.docker-config.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: ${{ github.event_name != 'pull_request_target' }}
